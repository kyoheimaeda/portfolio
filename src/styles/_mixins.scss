@use "sass:math";
@use "sass:map";

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin transition($properties: all, $duration: 0.3s, $timing: ease-in-out) {
  transition: $properties $duration $timing;
}

@mixin glitchCopy { 
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin glitchColor() {
  position: relative;
  z-index: 1;

  @keyframes glitch-it {
    0% {
      transform: translate(0);
    }
    20% {
      transform: translate(-0.05em, 0.05em);
    }
    40% {
      transform: translate(-0.05em, -0.05em);
    }
    60% {
      transform: translate(0.05em, 0.05em);
    }
    80% {
      transform: translate(0.05em, -0.05em);
    }
    100% {
      transform: translate(0);
    }
  }

  &::before,
  &::after {
    @include glitchCopy;
    display: block;
    opacity: 0.8;
  }

  &::before {
    animation: glitch-it 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
    color: #00FFFF;
    z-index: -1;
  }

  &::after {
    animation: glitch-it 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both infinite;
    color: #FF00FF;
    z-index: -2;
  }
}

@mixin glitch() {
  position: relative;
  animation: glitch-skew 1s infinite linear alternate-reverse;
  
  @keyframes glitch-anim {
    $steps: 20;
    @for $i from 0 through $steps {
      #{math.percentage($i * (math.div(1, $steps)))} {
        clip: rect(math.random(100) + px, 9999px, math.random(100) + px, 0);
        transform: skew(#{math.random(20)}deg);
      }
    }
  }
  
  @keyframes glitch-anim2 {
    $steps: 20;
    @for $i from 0 through $steps {
      #{math.percentage($i * (math.div(1, $steps)))} {
        clip: rect(math.random(100) + px, 9999px, math.random(100) + px, 0);
        transform: skew(#{math.random(20)}deg);
      }
    }
  }
  
  @keyframes glitch-skew {
    $steps: 10;

    @for $i from 0 through $steps {
      $percentage: math.percentage($i * (math.div(1, $steps)));

      // 最初のステップだけランダムにスキュー、他は0deg固定
      @if $i == 0 {
        #{$percentage} {
          transform: skew(#{math.random(20) - 10}deg);
        }
      } @else {
        #{$percentage} {
          transform: skew(0deg);
        }
      }
    }
  }

  &::before {
    @include glitchCopy;
    left: 0.025em;
    text-shadow: -0.025em 0 #ff00c1;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim 2s infinite linear alternate-reverse;
  }
  
  &::after {
    @include glitchCopy;
    left: -0.025em;
    text-shadow: -0.025em 0 #00fff9, 0.025em 0.025em #ff00c1;
    animation: glitch-anim2 2s infinite linear alternate-reverse;
  }
}
